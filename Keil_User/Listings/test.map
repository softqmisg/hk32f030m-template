Component: ARM Compiler 6.15 Tool: armlink [5dd79300]

==============================================================================

Section Cross References

    startup_hk32f030mf4p6.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_hk32f030mf4p6.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_hk32f030mf4p6.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_hk32f030mf4p6.o(RESET) refers to startup_hk32f030mf4p6.o(STACK) for __initial_sp
    startup_hk32f030mf4p6.o(RESET) refers to startup_hk32f030mf4p6.o(.text) for Reset_Handler
    startup_hk32f030mf4p6.o(RESET) refers to hk32f030m_it.o(.text.NMI_Handler) for NMI_Handler
    startup_hk32f030mf4p6.o(RESET) refers to hk32f030m_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_hk32f030mf4p6.o(RESET) refers to hk32f030m_it.o(.text.SVC_Handler) for SVC_Handler
    startup_hk32f030mf4p6.o(RESET) refers to hk32f030m_it.o(.text.PendSV_Handler) for PendSV_Handler
    startup_hk32f030mf4p6.o(RESET) refers to hk32f030m_it.o(.text.SysTick_Handler) for SysTick_Handler
    startup_hk32f030mf4p6.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_hk32f030mf4p6.o(.text) refers to system_hk32f030m.o(.text.SystemInit) for SystemInit
    startup_hk32f030mf4p6.o(.text) refers to __main.o(!!!main) for __main
    startup_hk32f030mf4p6.o(.text) refers to startup_hk32f030mf4p6.o(HEAP) for Heap_Mem
    startup_hk32f030mf4p6.o(.text) refers to startup_hk32f030mf4p6.o(STACK) for Stack_Mem
    system_hk32f030m.o(.ARM.exidx.text.clockFailure) refers to system_hk32f030m.o(.text.clockFailure) for [Anonymous Symbol]
    system_hk32f030m.o(.text.SystemInit) refers to system_hk32f030m.o(.text.clockFailure) for clockFailure
    system_hk32f030m.o(.ARM.exidx.text.SystemInit) refers to system_hk32f030m.o(.text.SystemInit) for [Anonymous Symbol]
    system_hk32f030m.o(.text.SystemCoreClockUpdate) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    system_hk32f030m.o(.text.SystemCoreClockUpdate) refers to system_hk32f030m.o(.data.SystemCoreClock) for SystemCoreClock
    system_hk32f030m.o(.text.SystemCoreClockUpdate) refers to hk32f030m_rcc.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_hk32f030m.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_hk32f030m.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    main.o(.text.LED_GPIO_Config) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    main.o(.text.LED_GPIO_Config) refers to hk32f030m_gpio.o(.text.GPIO_Init) for GPIO_Init
    main.o(.text.LED_GPIO_Config) refers to hk32f030m_gpio.o(.text.GPIO_ResetBits) for GPIO_ResetBits
    main.o(.ARM.exidx.text.LED_GPIO_Config) refers to main.o(.text.LED_GPIO_Config) for [Anonymous Symbol]
    main.o(.text.main) refers to systick_delay.o(.text.SysTick_Init) for SysTick_Init
    main.o(.text.main) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    main.o(.text.main) refers to hk32f030m_gpio.o(.text.GPIO_Init) for GPIO_Init
    main.o(.text.main) refers to hk32f030m_gpio.o(.text.GPIO_ResetBits) for GPIO_ResetBits
    main.o(.text.main) refers to hk32f030m_gpio.o(.text.GPIO_SetBits) for GPIO_SetBits
    main.o(.text.main) refers to systick_delay.o(.text.SysTick_DelayMs) for SysTick_DelayMs
    main.o(.text.main) refers to hk32f030m_gpio.o(.text.GPIO_Toggle) for GPIO_Toggle
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    systick_delay.o(.text.SysTick_Init) refers to hk32f030m_misc.o(.text.SysTick_CLKSourceConfig) for SysTick_CLKSourceConfig
    systick_delay.o(.text.SysTick_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    systick_delay.o(.text.SysTick_Init) refers to system_hk32f030m.o(.data.SystemCoreClock) for SystemCoreClock
    systick_delay.o(.text.SysTick_Init) refers to systick_delay.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    systick_delay.o(.ARM.exidx.text.SysTick_Init) refers to systick_delay.o(.text.SysTick_Init) for [Anonymous Symbol]
    systick_delay.o(.text.SysTick_DelayUs) refers to systick_delay.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    systick_delay.o(.ARM.exidx.text.SysTick_DelayUs) refers to systick_delay.o(.text.SysTick_DelayUs) for [Anonymous Symbol]
    systick_delay.o(.text.SysTick_DelayMs) refers to systick_delay.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    systick_delay.o(.ARM.exidx.text.SysTick_DelayMs) refers to systick_delay.o(.text.SysTick_DelayMs) for [Anonymous Symbol]
    hk32f030m_it.o(.ARM.exidx.text.NMI_Handler) refers to hk32f030m_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    hk32f030m_it.o(.ARM.exidx.text.HardFault_Handler) refers to hk32f030m_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    hk32f030m_it.o(.ARM.exidx.text.SVC_Handler) refers to hk32f030m_it.o(.text.SVC_Handler) for [Anonymous Symbol]
    hk32f030m_it.o(.ARM.exidx.text.PendSV_Handler) refers to hk32f030m_it.o(.text.PendSV_Handler) for [Anonymous Symbol]
    hk32f030m_it.o(.ARM.exidx.text.SysTick_Handler) refers to hk32f030m_it.o(.text.SysTick_Handler) for [Anonymous Symbol]
    test.o(.text.imageFileInfo) refers to test.o(.rodata.imageFileTable) for [Anonymous Symbol]
    test.o(.ARM.exidx.text.imageFileInfo) refers to test.o(.text.imageFileInfo) for [Anonymous Symbol]
    test.o(.rodata.imageFileTable) refers to test.o(.rodata.imageFileData) for [Anonymous Symbol]
    hk32f030m_adc.o(.text.ADC_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    hk32f030m_adc.o(.ARM.exidx.text.ADC_DeInit) refers to hk32f030m_adc.o(.text.ADC_DeInit) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_Init) refers to hk32f030m_adc.o(.text.ADC_Init) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_StructInit) refers to hk32f030m_adc.o(.text.ADC_StructInit) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_Cmd) refers to hk32f030m_adc.o(.text.ADC_Cmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_ClockModeConfig) refers to hk32f030m_adc.o(.text.ADC_ClockModeConfig) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_JitterCmd) refers to hk32f030m_adc.o(.text.ADC_JitterCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_AutoPowerOffCmd) refers to hk32f030m_adc.o(.text.ADC_AutoPowerOffCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_WaitModeCmd) refers to hk32f030m_adc.o(.text.ADC_WaitModeCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogCmd) refers to hk32f030m_adc.o(.text.ADC_AnalogWatchdogCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogThresholdsConfig) refers to hk32f030m_adc.o(.text.ADC_AnalogWatchdogThresholdsConfig) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelConfig) refers to hk32f030m_adc.o(.text.ADC_AnalogWatchdogSingleChannelConfig) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelCmd) refers to hk32f030m_adc.o(.text.ADC_AnalogWatchdogSingleChannelCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_VrefintCmd) refers to hk32f030m_adc.o(.text.ADC_VrefintCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_ChannelConfig) refers to hk32f030m_adc.o(.text.ADC_ChannelConfig) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_ContinuousModeCmd) refers to hk32f030m_adc.o(.text.ADC_ContinuousModeCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_DiscModeCmd) refers to hk32f030m_adc.o(.text.ADC_DiscModeCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_OverrunModeCmd) refers to hk32f030m_adc.o(.text.ADC_OverrunModeCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_GetCalibrationFactor) refers to hk32f030m_adc.o(.text.ADC_GetCalibrationFactor) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_StopOfConversion) refers to hk32f030m_adc.o(.text.ADC_StopOfConversion) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_StartOfConversion) refers to hk32f030m_adc.o(.text.ADC_StartOfConversion) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_GetConversionValue) refers to hk32f030m_adc.o(.text.ADC_GetConversionValue) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_ITConfig) refers to hk32f030m_adc.o(.text.ADC_ITConfig) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_GetFlagStatus) refers to hk32f030m_adc.o(.text.ADC_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_ClearFlag) refers to hk32f030m_adc.o(.text.ADC_ClearFlag) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_GetITStatus) refers to hk32f030m_adc.o(.text.ADC_GetITStatus) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_ClearITPendingBit) refers to hk32f030m_adc.o(.text.ADC_ClearITPendingBit) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_AWDWakeup_Cmd) refers to hk32f030m_adc.o(.text.ADC_AWDWakeup_Cmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_Diff_Func) refers to hk32f030m_adc.o(.text.ADC_Diff_Func) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_InterDelay_Func) refers to hk32f030m_adc.o(.text.ADC_InterDelay_Func) for [Anonymous Symbol]
    hk32f030m_awu.o(.ARM.exidx.text.AWU_DeInit) refers to hk32f030m_awu.o(.text.AWU_DeInit) for [Anonymous Symbol]
    hk32f030m_awu.o(.ARM.exidx.text.AWU_CLKConfig) refers to hk32f030m_awu.o(.text.AWU_CLKConfig) for [Anonymous Symbol]
    hk32f030m_awu.o(.ARM.exidx.text.AWU_TimerCounterAndStart) refers to hk32f030m_awu.o(.text.AWU_TimerCounterAndStart) for [Anonymous Symbol]
    hk32f030m_awu.o(.ARM.exidx.text.AWU_GetFlagStatus) refers to hk32f030m_awu.o(.text.AWU_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_beep.o(.ARM.exidx.text.BEEP_DeInit) refers to hk32f030m_beep.o(.text.BEEP_DeInit) for [Anonymous Symbol]
    hk32f030m_beep.o(.ARM.exidx.text.BEEP_Init) refers to hk32f030m_beep.o(.text.BEEP_Init) for [Anonymous Symbol]
    hk32f030m_beep.o(.ARM.exidx.text.BEEP_Cmd) refers to hk32f030m_beep.o(.text.BEEP_Cmd) for [Anonymous Symbol]
    hk32f030m_beep.o(.ARM.exidx.text.BEEP_ClockSelect) refers to hk32f030m_beep.o(.text.BEEP_ClockSelect) for [Anonymous Symbol]
    hk32f030m_beep.o(.ARM.exidx.text.BEEP_SetPrescaler) refers to hk32f030m_beep.o(.text.BEEP_SetPrescaler) for [Anonymous Symbol]
    hk32f030m_beep.o(.ARM.exidx.text.BEEP_SetTRGOPrescaler) refers to hk32f030m_beep.o(.text.BEEP_SetTRGOPrescaler) for [Anonymous Symbol]
    hk32f030m_beep.o(.ARM.exidx.text.BEEP_ReadBeepStatus) refers to hk32f030m_beep.o(.text.BEEP_ReadBeepStatus) for [Anonymous Symbol]
    hk32f030m_beep.o(.ARM.exidx.text.BEEP_TRGOCmd) refers to hk32f030m_beep.o(.text.BEEP_TRGOCmd) for [Anonymous Symbol]
    hk32f030m_crc.o(.ARM.exidx.text.CRC_DeInit) refers to hk32f030m_crc.o(.text.CRC_DeInit) for [Anonymous Symbol]
    hk32f030m_crc.o(.ARM.exidx.text.CRC_ResetDR) refers to hk32f030m_crc.o(.text.CRC_ResetDR) for [Anonymous Symbol]
    hk32f030m_crc.o(.ARM.exidx.text.CRC_ReverseInputDataSelect) refers to hk32f030m_crc.o(.text.CRC_ReverseInputDataSelect) for [Anonymous Symbol]
    hk32f030m_crc.o(.ARM.exidx.text.CRC_ReverseOutputDataCmd) refers to hk32f030m_crc.o(.text.CRC_ReverseOutputDataCmd) for [Anonymous Symbol]
    hk32f030m_crc.o(.ARM.exidx.text.CRC_SetInitRegister) refers to hk32f030m_crc.o(.text.CRC_SetInitRegister) for [Anonymous Symbol]
    hk32f030m_crc.o(.ARM.exidx.text.CRC_CalcCRC) refers to hk32f030m_crc.o(.text.CRC_CalcCRC) for [Anonymous Symbol]
    hk32f030m_crc.o(.ARM.exidx.text.CRC_CalcBlockCRC) refers to hk32f030m_crc.o(.text.CRC_CalcBlockCRC) for [Anonymous Symbol]
    hk32f030m_crc.o(.ARM.exidx.text.CRC_GetCRC) refers to hk32f030m_crc.o(.text.CRC_GetCRC) for [Anonymous Symbol]
    hk32f030m_crc.o(.ARM.exidx.text.CRC_SetIDRegister) refers to hk32f030m_crc.o(.text.CRC_SetIDRegister) for [Anonymous Symbol]
    hk32f030m_crc.o(.ARM.exidx.text.CRC_GetIDRegister) refers to hk32f030m_crc.o(.text.CRC_GetIDRegister) for [Anonymous Symbol]
    hk32f030m_dbgmcu.o(.ARM.exidx.text.DBGMCU_GetREVID) refers to hk32f030m_dbgmcu.o(.text.DBGMCU_GetREVID) for [Anonymous Symbol]
    hk32f030m_dbgmcu.o(.ARM.exidx.text.DBGMCU_GetDEVID) refers to hk32f030m_dbgmcu.o(.text.DBGMCU_GetDEVID) for [Anonymous Symbol]
    hk32f030m_dbgmcu.o(.ARM.exidx.text.DBGMCU_Config) refers to hk32f030m_dbgmcu.o(.text.DBGMCU_Config) for [Anonymous Symbol]
    hk32f030m_dbgmcu.o(.ARM.exidx.text.DBGMCU_APB1PeriphConfig) refers to hk32f030m_dbgmcu.o(.text.DBGMCU_APB1PeriphConfig) for [Anonymous Symbol]
    hk32f030m_exti.o(.ARM.exidx.text.EXTI_DeInit) refers to hk32f030m_exti.o(.text.EXTI_DeInit) for [Anonymous Symbol]
    hk32f030m_exti.o(.ARM.exidx.text.EXTI_Init) refers to hk32f030m_exti.o(.text.EXTI_Init) for [Anonymous Symbol]
    hk32f030m_exti.o(.ARM.exidx.text.EXTI_StructInit) refers to hk32f030m_exti.o(.text.EXTI_StructInit) for [Anonymous Symbol]
    hk32f030m_exti.o(.ARM.exidx.text.EXTI_GenerateSWInterrupt) refers to hk32f030m_exti.o(.text.EXTI_GenerateSWInterrupt) for [Anonymous Symbol]
    hk32f030m_exti.o(.ARM.exidx.text.EXTI_GetFlagStatus) refers to hk32f030m_exti.o(.text.EXTI_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_exti.o(.ARM.exidx.text.EXTI_GetITStatus) refers to hk32f030m_exti.o(.text.EXTI_GetITStatus) for [Anonymous Symbol]
    hk32f030m_exti.o(.ARM.exidx.text.EXTI_ClearFlag) refers to hk32f030m_exti.o(.text.EXTI_ClearFlag) for [Anonymous Symbol]
    hk32f030m_exti.o(.ARM.exidx.text.EXTI_ClearITPendingBit) refers to hk32f030m_exti.o(.text.EXTI_ClearITPendingBit) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_SetLatency) refers to hk32f030m_flash.o(.text.FLASH_SetLatency) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_Unlock) refers to hk32f030m_flash.o(.text.FLASH_Unlock) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_Lock) refers to hk32f030m_flash.o(.text.FLASH_Lock) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_ErasePage) refers to hk32f030m_flash.o(.text.FLASH_ErasePage) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation) refers to hk32f030m_flash.o(.text.FLASH_WaitForLastOperation) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_EraseAllPages) refers to hk32f030m_flash.o(.text.FLASH_EraseAllPages) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_ProgramHalfWord) refers to hk32f030m_flash.o(.text.FLASH_ProgramHalfWord) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_ProgramByte) refers to hk32f030m_flash.o(.text.FLASH_ProgramByte) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_Unlock) refers to hk32f030m_flash.o(.text.FLASH_OB_Unlock) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_Lock) refers to hk32f030m_flash.o(.text.FLASH_OB_Lock) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_EraseByte) refers to hk32f030m_flash.o(.text.FLASH_OB_EraseByte) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_WRPConfig) refers to hk32f030m_flash.o(.text.FLASH_OB_WRPConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_RDPConfig) refers to hk32f030m_flash.o(.text.FLASH_OB_RDPConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_UserConfig) refers to hk32f030m_flash.o(.text.FLASH_OB_UserConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_IWDG_RLRConfig) refers to hk32f030m_flash.o(.text.FLASH_OB_IWDG_RLRConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_LSILPConfig) refers to hk32f030m_flash.o(.text.FLASH_OB_LSILPConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_DBGCLKConfig) refers to hk32f030m_flash.o(.text.FLASH_OB_DBGCLKConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_WriteUser) refers to hk32f030m_flash.o(.text.FLASH_OB_WriteUser) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_ProgramData) refers to hk32f030m_flash.o(.text.FLASH_OB_ProgramData) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_GetUser) refers to hk32f030m_flash.o(.text.FLASH_OB_GetUser) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_GetWRP) refers to hk32f030m_flash.o(.text.FLASH_OB_GetWRP) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_GetRDP) refers to hk32f030m_flash.o(.text.FLASH_OB_GetRDP) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_ITConfig) refers to hk32f030m_flash.o(.text.FLASH_ITConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_GetFlagStatus) refers to hk32f030m_flash.o(.text.FLASH_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_ClearFlag) refers to hk32f030m_flash.o(.text.FLASH_ClearFlag) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_GetStatus) refers to hk32f030m_flash.o(.text.FLASH_GetStatus) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.EEPROM_EraseByte) refers to hk32f030m_flash.o(.text.EEPROM_EraseByte) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.EEPROM_ProgramByte) refers to hk32f030m_flash.o(.text.EEPROM_ProgramByte) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.Sys_GetDevice64BitUID) refers to hk32f030m_flash.o(.text.Sys_GetDevice64BitUID) for [Anonymous Symbol]
    hk32f030m_gpio.o(.text.GPIO_DeInit) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphResetCmd) for RCC_AHBPeriphResetCmd
    hk32f030m_gpio.o(.text.GPIO_DeInit) refers to hk32f030m_gpio.o(.rodata.cst16) for .Lswitch.table.GPIO_DeInit.1
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_DeInit) refers to hk32f030m_gpio.o(.text.GPIO_DeInit) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_Init) refers to hk32f030m_gpio.o(.text.GPIO_Init) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_StructInit) refers to hk32f030m_gpio.o(.text.GPIO_StructInit) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig) refers to hk32f030m_gpio.o(.text.GPIO_PinLockConfig) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit) refers to hk32f030m_gpio.o(.text.GPIO_ReadInputDataBit) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadInputData) refers to hk32f030m_gpio.o(.text.GPIO_ReadInputData) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit) refers to hk32f030m_gpio.o(.text.GPIO_ReadOutputDataBit) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData) refers to hk32f030m_gpio.o(.text.GPIO_ReadOutputData) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_SetBits) refers to hk32f030m_gpio.o(.text.GPIO_SetBits) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ResetBits) refers to hk32f030m_gpio.o(.text.GPIO_ResetBits) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_WriteBit) refers to hk32f030m_gpio.o(.text.GPIO_WriteBit) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_Write) refers to hk32f030m_gpio.o(.text.GPIO_Write) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_Toggle) refers to hk32f030m_gpio.o(.text.GPIO_Toggle) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig) refers to hk32f030m_gpio.o(.text.GPIO_PinAFConfig) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_IOMUX_PinAFConfig) refers to hk32f030m_gpio.o(.text.GPIO_IOMUX_PinAFConfig) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_IOMUX_ChangePin) refers to hk32f030m_gpio.o(.text.GPIO_IOMUX_ChangePin) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_IOMUX_SetTIM2CN1_Source) refers to hk32f030m_gpio.o(.text.GPIO_IOMUX_SetTIM2CN1_Source) for [Anonymous Symbol]
    hk32f030m_i2c.o(.text.I2C_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_DeInit) refers to hk32f030m_i2c.o(.text.I2C_DeInit) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_Init) refers to hk32f030m_i2c.o(.text.I2C_Init) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_StructInit) refers to hk32f030m_i2c.o(.text.I2C_StructInit) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_Cmd) refers to hk32f030m_i2c.o(.text.I2C_Cmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_SoftwareResetCmd) refers to hk32f030m_i2c.o(.text.I2C_SoftwareResetCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_ITConfig) refers to hk32f030m_i2c.o(.text.I2C_ITConfig) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_StretchClockCmd) refers to hk32f030m_i2c.o(.text.I2C_StretchClockCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_StopModeCmd) refers to hk32f030m_i2c.o(.text.I2C_StopModeCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_DualAddressCmd) refers to hk32f030m_i2c.o(.text.I2C_DualAddressCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_OwnAddress2Config) refers to hk32f030m_i2c.o(.text.I2C_OwnAddress2Config) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_GeneralCallCmd) refers to hk32f030m_i2c.o(.text.I2C_GeneralCallCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_SlaveByteControlCmd) refers to hk32f030m_i2c.o(.text.I2C_SlaveByteControlCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_SlaveAddressConfig) refers to hk32f030m_i2c.o(.text.I2C_SlaveAddressConfig) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_10BitAddressingModeCmd) refers to hk32f030m_i2c.o(.text.I2C_10BitAddressingModeCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_AutoEndCmd) refers to hk32f030m_i2c.o(.text.I2C_AutoEndCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_ReloadCmd) refers to hk32f030m_i2c.o(.text.I2C_ReloadCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_NumberOfBytesConfig) refers to hk32f030m_i2c.o(.text.I2C_NumberOfBytesConfig) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_MasterRequestConfig) refers to hk32f030m_i2c.o(.text.I2C_MasterRequestConfig) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_GenerateSTART) refers to hk32f030m_i2c.o(.text.I2C_GenerateSTART) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_GenerateSTOP) refers to hk32f030m_i2c.o(.text.I2C_GenerateSTOP) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_10BitAddressHeaderCmd) refers to hk32f030m_i2c.o(.text.I2C_10BitAddressHeaderCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_AcknowledgeConfig) refers to hk32f030m_i2c.o(.text.I2C_AcknowledgeConfig) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_GetAddressMatched) refers to hk32f030m_i2c.o(.text.I2C_GetAddressMatched) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_GetTransferDirection) refers to hk32f030m_i2c.o(.text.I2C_GetTransferDirection) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_TransferHandling) refers to hk32f030m_i2c.o(.text.I2C_TransferHandling) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_SMBusAlertCmd) refers to hk32f030m_i2c.o(.text.I2C_SMBusAlertCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_ClockTimeoutCmd) refers to hk32f030m_i2c.o(.text.I2C_ClockTimeoutCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_ExtendedClockTimeoutCmd) refers to hk32f030m_i2c.o(.text.I2C_ExtendedClockTimeoutCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_IdleClockTimeoutCmd) refers to hk32f030m_i2c.o(.text.I2C_IdleClockTimeoutCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_TimeoutAConfig) refers to hk32f030m_i2c.o(.text.I2C_TimeoutAConfig) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_TimeoutBConfig) refers to hk32f030m_i2c.o(.text.I2C_TimeoutBConfig) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_CalculatePEC) refers to hk32f030m_i2c.o(.text.I2C_CalculatePEC) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_PECRequestCmd) refers to hk32f030m_i2c.o(.text.I2C_PECRequestCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_GetPEC) refers to hk32f030m_i2c.o(.text.I2C_GetPEC) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_ReadRegister) refers to hk32f030m_i2c.o(.text.I2C_ReadRegister) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_SendData) refers to hk32f030m_i2c.o(.text.I2C_SendData) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_ReceiveData) refers to hk32f030m_i2c.o(.text.I2C_ReceiveData) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_GetFlagStatus) refers to hk32f030m_i2c.o(.text.I2C_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_ClearFlag) refers to hk32f030m_i2c.o(.text.I2C_ClearFlag) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_GetITStatus) refers to hk32f030m_i2c.o(.text.I2C_GetITStatus) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_ClearITPendingBit) refers to hk32f030m_i2c.o(.text.I2C_ClearITPendingBit) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_WriteAccessCmd) refers to hk32f030m_iwdg.o(.text.IWDG_WriteAccessCmd) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_SetPrescaler) refers to hk32f030m_iwdg.o(.text.IWDG_SetPrescaler) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_SetReload) refers to hk32f030m_iwdg.o(.text.IWDG_SetReload) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_ReloadCounter) refers to hk32f030m_iwdg.o(.text.IWDG_ReloadCounter) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_SetWindowValue) refers to hk32f030m_iwdg.o(.text.IWDG_SetWindowValue) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_Enable) refers to hk32f030m_iwdg.o(.text.IWDG_Enable) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_GetFlagStatus) refers to hk32f030m_iwdg.o(.text.IWDG_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_misc.o(.ARM.exidx.text.NVIC_Init) refers to hk32f030m_misc.o(.text.NVIC_Init) for [Anonymous Symbol]
    hk32f030m_misc.o(.ARM.exidx.text.NVIC_SystemLPConfig) refers to hk32f030m_misc.o(.text.NVIC_SystemLPConfig) for [Anonymous Symbol]
    hk32f030m_misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig) refers to hk32f030m_misc.o(.text.SysTick_CLKSourceConfig) for [Anonymous Symbol]
    hk32f030m_pwr.o(.text.PWR_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    hk32f030m_pwr.o(.ARM.exidx.text.PWR_DeInit) refers to hk32f030m_pwr.o(.text.PWR_DeInit) for [Anonymous Symbol]
    hk32f030m_pwr.o(.ARM.exidx.text.PWR_EnterSleepMode) refers to hk32f030m_pwr.o(.text.PWR_EnterSleepMode) for [Anonymous Symbol]
    hk32f030m_pwr.o(.text.PWR_EnterDeepSleepMode) refers to hk32f030m_rcc.o(.text.RCC_LSICmd) for RCC_LSICmd
    hk32f030m_pwr.o(.text.PWR_EnterDeepSleepMode) refers to hk32f030m_rcc.o(.text.RCC_GetFlagStatus) for RCC_GetFlagStatus
    hk32f030m_pwr.o(.text.PWR_EnterDeepSleepMode) refers to hk32f030m_rcc.o(.text.RCC_HSICmd) for RCC_HSICmd
    hk32f030m_pwr.o(.ARM.exidx.text.PWR_EnterDeepSleepMode) refers to hk32f030m_pwr.o(.text.PWR_EnterDeepSleepMode) for [Anonymous Symbol]
    hk32f030m_pwr.o(.text.PWR_EnterStopMode) refers to hk32f030m_exti.o(.text.EXTI_GetFlagStatus) for EXTI_GetFlagStatus
    hk32f030m_pwr.o(.text.PWR_EnterStopMode) refers to hk32f030m_exti.o(.text.EXTI_ClearFlag) for EXTI_ClearFlag
    hk32f030m_pwr.o(.ARM.exidx.text.PWR_EnterStopMode) refers to hk32f030m_pwr.o(.text.PWR_EnterStopMode) for [Anonymous Symbol]
    hk32f030m_pwr.o(.ARM.exidx.text.PWR_SetLDO_RefVolToADC) refers to hk32f030m_pwr.o(.text.PWR_SetLDO_RefVolToADC) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_DeInit) refers to hk32f030m_rcc.o(.text.RCC_DeInit) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_WaitForStartUp) refers to hk32f030m_rcc.o(.text.RCC_WaitForStartUp) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus) refers to hk32f030m_rcc.o(.text.RCC_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue) refers to hk32f030m_rcc.o(.text.RCC_AdjustHSICalibrationValue) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_HSICmd) refers to hk32f030m_rcc.o(.text.RCC_HSICmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_LSICmd) refers to hk32f030m_rcc.o(.text.RCC_LSICmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.text.RCC_EXTCmd) refers to hk32f030m_gpio.o(.text.GPIO_Init) for GPIO_Init
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_EXTCmd) refers to hk32f030m_rcc.o(.text.RCC_EXTCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd) refers to hk32f030m_rcc.o(.text.RCC_ClockSecuritySystemCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_MCOConfig) refers to hk32f030m_rcc.o(.text.RCC_MCOConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig) refers to hk32f030m_rcc.o(.text.RCC_SYSCLKConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource) refers to hk32f030m_rcc.o(.text.RCC_GetSYSCLKSource) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_HCLKConfig) refers to hk32f030m_rcc.o(.text.RCC_HCLKConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_PCLKConfig) refers to hk32f030m_rcc.o(.text.RCC_PCLKConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig) refers to hk32f030m_rcc.o(.text.RCC_ADCCLKConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_I2CCLKConfig) refers to hk32f030m_rcc.o(.text.RCC_I2CCLKConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_USARTCLKConfig) refers to hk32f030m_rcc.o(.text.RCC_USARTCLKConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.text.RCC_GetClocksFreq) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    hk32f030m_rcc.o(.text.RCC_GetClocksFreq) refers to hk32f030m_rcc.o(.rodata.AHBPrescTable) for AHBPrescTable
    hk32f030m_rcc.o(.text.RCC_GetClocksFreq) refers to hk32f030m_rcc.o(.rodata.APBPrescTable) for APBPrescTable
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq) refers to hk32f030m_rcc.o(.text.RCC_GetClocksFreq) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphClockCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd) refers to hk32f030m_rcc.o(.text.RCC_APB1PeriphClockCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_AHBPeriphResetCmd) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphResetCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd) refers to hk32f030m_rcc.o(.text.RCC_APB1PeriphResetCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_ITConfig) refers to hk32f030m_rcc.o(.text.RCC_ITConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_ClearFlag) refers to hk32f030m_rcc.o(.text.RCC_ClearFlag) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetITStatus) refers to hk32f030m_rcc.o(.text.RCC_GetITStatus) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit) refers to hk32f030m_rcc.o(.text.RCC_ClearITPendingBit) for [Anonymous Symbol]
    hk32f030m_spi.o(.text.SPI_I2S_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_DeInit) refers to hk32f030m_spi.o(.text.SPI_I2S_DeInit) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_StructInit) refers to hk32f030m_spi.o(.text.SPI_StructInit) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_Init) refers to hk32f030m_spi.o(.text.SPI_Init) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.I2S_StructInit) refers to hk32f030m_spi.o(.text.I2S_StructInit) for [Anonymous Symbol]
    hk32f030m_spi.o(.text.I2S_Init) refers to hk32f030m_rcc.o(.text.RCC_GetClocksFreq) for RCC_GetClocksFreq
    hk32f030m_spi.o(.text.I2S_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    hk32f030m_spi.o(.ARM.exidx.text.I2S_Init) refers to hk32f030m_spi.o(.text.I2S_Init) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_Cmd) refers to hk32f030m_spi.o(.text.SPI_Cmd) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_TIModeCmd) refers to hk32f030m_spi.o(.text.SPI_TIModeCmd) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.I2S_Cmd) refers to hk32f030m_spi.o(.text.I2S_Cmd) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_DataSizeConfig) refers to hk32f030m_spi.o(.text.SPI_DataSizeConfig) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_RxFIFOThresholdConfig) refers to hk32f030m_spi.o(.text.SPI_RxFIFOThresholdConfig) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_BiDirectionalLineConfig) refers to hk32f030m_spi.o(.text.SPI_BiDirectionalLineConfig) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_NSSInternalSoftwareConfig) refers to hk32f030m_spi.o(.text.SPI_NSSInternalSoftwareConfig) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_SSOutputCmd) refers to hk32f030m_spi.o(.text.SPI_SSOutputCmd) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_NSSPulseModeCmd) refers to hk32f030m_spi.o(.text.SPI_NSSPulseModeCmd) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_SendData8) refers to hk32f030m_spi.o(.text.SPI_SendData8) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_SendData16) refers to hk32f030m_spi.o(.text.SPI_I2S_SendData16) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_ReceiveData8) refers to hk32f030m_spi.o(.text.SPI_ReceiveData8) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_ReceiveData16) refers to hk32f030m_spi.o(.text.SPI_I2S_ReceiveData16) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_CRCLengthConfig) refers to hk32f030m_spi.o(.text.SPI_CRCLengthConfig) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_CalculateCRC) refers to hk32f030m_spi.o(.text.SPI_CalculateCRC) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_TransmitCRC) refers to hk32f030m_spi.o(.text.SPI_TransmitCRC) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_GetCRC) refers to hk32f030m_spi.o(.text.SPI_GetCRC) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_GetCRCPolynomial) refers to hk32f030m_spi.o(.text.SPI_GetCRCPolynomial) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_ITConfig) refers to hk32f030m_spi.o(.text.SPI_I2S_ITConfig) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_GetTransmissionFIFOStatus) refers to hk32f030m_spi.o(.text.SPI_GetTransmissionFIFOStatus) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_GetReceptionFIFOStatus) refers to hk32f030m_spi.o(.text.SPI_GetReceptionFIFOStatus) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_GetFlagStatus) refers to hk32f030m_spi.o(.text.SPI_I2S_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_ClearFlag) refers to hk32f030m_spi.o(.text.SPI_I2S_ClearFlag) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_GetITStatus) refers to hk32f030m_spi.o(.text.SPI_I2S_GetITStatus) for [Anonymous Symbol]
    hk32f030m_syscfg.o(.text.SYSCFG_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_DeInit) refers to hk32f030m_syscfg.o(.text.SYSCFG_DeInit) for [Anonymous Symbol]
    hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_Lockup_Tim1BreakConfig) refers to hk32f030m_syscfg.o(.text.SYSCFG_Lockup_Tim1BreakConfig) for [Anonymous Symbol]
    hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_MemoryRemapConfig) refers to hk32f030m_syscfg.o(.text.SYSCFG_MemoryRemapConfig) for [Anonymous Symbol]
    hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_EXTILineConfig) refers to hk32f030m_syscfg.o(.text.SYSCFG_EXTILineConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.text.TIM_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    hk32f030m_tim.o(.text.TIM_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    hk32f030m_tim.o(.ARM.exidx.text.TIM_DeInit) refers to hk32f030m_tim.o(.text.TIM_DeInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_TimeBaseInit) refers to hk32f030m_tim.o(.text.TIM_TimeBaseInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit) refers to hk32f030m_tim.o(.text.TIM_TimeBaseStructInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_PrescalerConfig) refers to hk32f030m_tim.o(.text.TIM_PrescalerConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_CounterModeConfig) refers to hk32f030m_tim.o(.text.TIM_CounterModeConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCounter) refers to hk32f030m_tim.o(.text.TIM_SetCounter) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetAutoreload) refers to hk32f030m_tim.o(.text.TIM_SetAutoreload) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCounter) refers to hk32f030m_tim.o(.text.TIM_GetCounter) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetPrescaler) refers to hk32f030m_tim.o(.text.TIM_GetPrescaler) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig) refers to hk32f030m_tim.o(.text.TIM_UpdateDisableConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig) refers to hk32f030m_tim.o(.text.TIM_UpdateRequestConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig) refers to hk32f030m_tim.o(.text.TIM_ARRPreloadConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode) refers to hk32f030m_tim.o(.text.TIM_SelectOnePulseMode) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetClockDivision) refers to hk32f030m_tim.o(.text.TIM_SetClockDivision) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_Cmd) refers to hk32f030m_tim.o(.text.TIM_Cmd) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_BDTRConfig) refers to hk32f030m_tim.o(.text.TIM_BDTRConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_BDTRStructInit) refers to hk32f030m_tim.o(.text.TIM_BDTRStructInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs) refers to hk32f030m_tim.o(.text.TIM_CtrlPWMOutputs) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1Init) refers to hk32f030m_tim.o(.text.TIM_OC1Init) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2Init) refers to hk32f030m_tim.o(.text.TIM_OC2Init) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3Init) refers to hk32f030m_tim.o(.text.TIM_OC3Init) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4Init) refers to hk32f030m_tim.o(.text.TIM_OC4Init) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OCStructInit) refers to hk32f030m_tim.o(.text.TIM_OCStructInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOCxM) refers to hk32f030m_tim.o(.text.TIM_SelectOCxM) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare1) refers to hk32f030m_tim.o(.text.TIM_SetCompare1) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare2) refers to hk32f030m_tim.o(.text.TIM_SetCompare2) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare3) refers to hk32f030m_tim.o(.text.TIM_SetCompare3) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare4) refers to hk32f030m_tim.o(.text.TIM_SetCompare4) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config) refers to hk32f030m_tim.o(.text.TIM_ForcedOC1Config) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config) refers to hk32f030m_tim.o(.text.TIM_ForcedOC2Config) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config) refers to hk32f030m_tim.o(.text.TIM_ForcedOC3Config) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config) refers to hk32f030m_tim.o(.text.TIM_ForcedOC4Config) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_CCPreloadControl) refers to hk32f030m_tim.o(.text.TIM_CCPreloadControl) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig) refers to hk32f030m_tim.o(.text.TIM_OC1PreloadConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig) refers to hk32f030m_tim.o(.text.TIM_OC2PreloadConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig) refers to hk32f030m_tim.o(.text.TIM_OC3PreloadConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig) refers to hk32f030m_tim.o(.text.TIM_OC4PreloadConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1FastConfig) refers to hk32f030m_tim.o(.text.TIM_OC1FastConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2FastConfig) refers to hk32f030m_tim.o(.text.TIM_OC2FastConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3FastConfig) refers to hk32f030m_tim.o(.text.TIM_OC3FastConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4FastConfig) refers to hk32f030m_tim.o(.text.TIM_OC4FastConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref) refers to hk32f030m_tim.o(.text.TIM_ClearOC1Ref) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref) refers to hk32f030m_tim.o(.text.TIM_ClearOC2Ref) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref) refers to hk32f030m_tim.o(.text.TIM_ClearOC3Ref) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref) refers to hk32f030m_tim.o(.text.TIM_ClearOC4Ref) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC1PolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC1NPolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC2PolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC2NPolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC3PolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC3NPolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC4PolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOCREFClear) refers to hk32f030m_tim.o(.text.TIM_SelectOCREFClear) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_CCxCmd) refers to hk32f030m_tim.o(.text.TIM_CCxCmd) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_CCxNCmd) refers to hk32f030m_tim.o(.text.TIM_CCxNCmd) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectCOM) refers to hk32f030m_tim.o(.text.TIM_SelectCOM) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ICInit) refers to hk32f030m_tim.o(.text.TIM_ICInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler) refers to hk32f030m_tim.o(.text.TIM_SetIC1Prescaler) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler) refers to hk32f030m_tim.o(.text.TIM_SetIC2Prescaler) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler) refers to hk32f030m_tim.o(.text.TIM_SetIC3Prescaler) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler) refers to hk32f030m_tim.o(.text.TIM_SetIC4Prescaler) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ICStructInit) refers to hk32f030m_tim.o(.text.TIM_ICStructInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_PWMIConfig) refers to hk32f030m_tim.o(.text.TIM_PWMIConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture1) refers to hk32f030m_tim.o(.text.TIM_GetCapture1) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture2) refers to hk32f030m_tim.o(.text.TIM_GetCapture2) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture3) refers to hk32f030m_tim.o(.text.TIM_GetCapture3) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture4) refers to hk32f030m_tim.o(.text.TIM_GetCapture4) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ITConfig) refers to hk32f030m_tim.o(.text.TIM_ITConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GenerateEvent) refers to hk32f030m_tim.o(.text.TIM_GenerateEvent) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetFlagStatus) refers to hk32f030m_tim.o(.text.TIM_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearFlag) refers to hk32f030m_tim.o(.text.TIM_ClearFlag) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetITStatus) refers to hk32f030m_tim.o(.text.TIM_GetITStatus) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit) refers to hk32f030m_tim.o(.text.TIM_ClearITPendingBit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_InternalClockConfig) refers to hk32f030m_tim.o(.text.TIM_InternalClockConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig) refers to hk32f030m_tim.o(.text.TIM_ITRxExternalClockConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger) refers to hk32f030m_tim.o(.text.TIM_SelectInputTrigger) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig) refers to hk32f030m_tim.o(.text.TIM_TIxExternalClockConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config) refers to hk32f030m_tim.o(.text.TIM_ETRClockMode1Config) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ETRConfig) refers to hk32f030m_tim.o(.text.TIM_ETRConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config) refers to hk32f030m_tim.o(.text.TIM_ETRClockMode2Config) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger) refers to hk32f030m_tim.o(.text.TIM_SelectOutputTrigger) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode) refers to hk32f030m_tim.o(.text.TIM_SelectSlaveMode) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode) refers to hk32f030m_tim.o(.text.TIM_SelectMasterSlaveMode) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig) refers to hk32f030m_tim.o(.text.TIM_EncoderInterfaceConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectHallSensor) refers to hk32f030m_tim.o(.text.TIM_SelectHallSensor) for [Anonymous Symbol]
    hk32f030m_usart.o(.text.USART_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    hk32f030m_usart.o(.ARM.exidx.text.USART_DeInit) refers to hk32f030m_usart.o(.text.USART_DeInit) for [Anonymous Symbol]
    hk32f030m_usart.o(.text.USART_Init) refers to hk32f030m_rcc.o(.text.RCC_GetClocksFreq) for RCC_GetClocksFreq
    hk32f030m_usart.o(.text.USART_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    hk32f030m_usart.o(.ARM.exidx.text.USART_Init) refers to hk32f030m_usart.o(.text.USART_Init) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_StructInit) refers to hk32f030m_usart.o(.text.USART_StructInit) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ClockInit) refers to hk32f030m_usart.o(.text.USART_ClockInit) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ClockStructInit) refers to hk32f030m_usart.o(.text.USART_ClockStructInit) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_Cmd) refers to hk32f030m_usart.o(.text.USART_Cmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_DirectionModeCmd) refers to hk32f030m_usart.o(.text.USART_DirectionModeCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_OverSampling8Cmd) refers to hk32f030m_usart.o(.text.USART_OverSampling8Cmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_OneBitMethodCmd) refers to hk32f030m_usart.o(.text.USART_OneBitMethodCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_MSBFirstCmd) refers to hk32f030m_usart.o(.text.USART_MSBFirstCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_DataInvCmd) refers to hk32f030m_usart.o(.text.USART_DataInvCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_InvPinCmd) refers to hk32f030m_usart.o(.text.USART_InvPinCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SWAPPinCmd) refers to hk32f030m_usart.o(.text.USART_SWAPPinCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ReceiverTimeOutCmd) refers to hk32f030m_usart.o(.text.USART_ReceiverTimeOutCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetReceiverTimeOut) refers to hk32f030m_usart.o(.text.USART_SetReceiverTimeOut) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetPrescaler) refers to hk32f030m_usart.o(.text.USART_SetPrescaler) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_STOPModeCmd) refers to hk32f030m_usart.o(.text.USART_STOPModeCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_StopModeWakeUpSourceConfig) refers to hk32f030m_usart.o(.text.USART_StopModeWakeUpSourceConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_AutoBaudRateCmd) refers to hk32f030m_usart.o(.text.USART_AutoBaudRateCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_AutoBaudRateConfig) refers to hk32f030m_usart.o(.text.USART_AutoBaudRateConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SendData) refers to hk32f030m_usart.o(.text.USART_SendData) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ReceiveData) refers to hk32f030m_usart.o(.text.USART_ReceiveData) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetAddress) refers to hk32f030m_usart.o(.text.USART_SetAddress) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_MuteModeCmd) refers to hk32f030m_usart.o(.text.USART_MuteModeCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_MuteModeWakeUpConfig) refers to hk32f030m_usart.o(.text.USART_MuteModeWakeUpConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_AddressDetectionConfig) refers to hk32f030m_usart.o(.text.USART_AddressDetectionConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_LINBreakDetectLengthConfig) refers to hk32f030m_usart.o(.text.USART_LINBreakDetectLengthConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_LINCmd) refers to hk32f030m_usart.o(.text.USART_LINCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_HalfDuplexCmd) refers to hk32f030m_usart.o(.text.USART_HalfDuplexCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetGuardTime) refers to hk32f030m_usart.o(.text.USART_SetGuardTime) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SmartCardCmd) refers to hk32f030m_usart.o(.text.USART_SmartCardCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SmartCardNACKCmd) refers to hk32f030m_usart.o(.text.USART_SmartCardNACKCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetAutoRetryCount) refers to hk32f030m_usart.o(.text.USART_SetAutoRetryCount) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetBlockLength) refers to hk32f030m_usart.o(.text.USART_SetBlockLength) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_IrDAConfig) refers to hk32f030m_usart.o(.text.USART_IrDAConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_IrDACmd) refers to hk32f030m_usart.o(.text.USART_IrDACmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_DECmd) refers to hk32f030m_usart.o(.text.USART_DECmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_DEPolarityConfig) refers to hk32f030m_usart.o(.text.USART_DEPolarityConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetDEAssertionTime) refers to hk32f030m_usart.o(.text.USART_SetDEAssertionTime) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetDEDeassertionTime) refers to hk32f030m_usart.o(.text.USART_SetDEDeassertionTime) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ITConfig) refers to hk32f030m_usart.o(.text.USART_ITConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_RequestCmd) refers to hk32f030m_usart.o(.text.USART_RequestCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_OverrunDetectionConfig) refers to hk32f030m_usart.o(.text.USART_OverrunDetectionConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_GetFlagStatus) refers to hk32f030m_usart.o(.text.USART_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ClearFlag) refers to hk32f030m_usart.o(.text.USART_ClearFlag) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_GetITStatus) refers to hk32f030m_usart.o(.text.USART_GetITStatus) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ClearITPendingBit) refers to hk32f030m_usart.o(.text.USART_ClearITPendingBit) for [Anonymous Symbol]
    hk32f030m_wwdg.o(.text.WWDG_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_DeInit) refers to hk32f030m_wwdg.o(.text.WWDG_DeInit) for [Anonymous Symbol]
    hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_SetPrescaler) refers to hk32f030m_wwdg.o(.text.WWDG_SetPrescaler) for [Anonymous Symbol]
    hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_SetWindowValue) refers to hk32f030m_wwdg.o(.text.WWDG_SetWindowValue) for [Anonymous Symbol]
    hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_EnableIT) refers to hk32f030m_wwdg.o(.text.WWDG_EnableIT) for [Anonymous Symbol]
    hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_SetCounter) refers to hk32f030m_wwdg.o(.text.WWDG_SetCounter) for [Anonymous Symbol]
    hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_Enable) refers to hk32f030m_wwdg.o(.text.WWDG_Enable) for [Anonymous Symbol]
    hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_GetFlagStatus) refers to hk32f030m_wwdg.o(.text.WWDG_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_ClearFlag) refers to hk32f030m_wwdg.o(.text.WWDG_ClearFlag) for [Anonymous Symbol]
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_hk32f030mf4p6.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing system_hk32f030m.o(.text), (0 bytes).
    Removing system_hk32f030m.o(.ARM.exidx.text.clockFailure), (8 bytes).
    Removing system_hk32f030m.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_hk32f030m.o(.text.SystemCoreClockUpdate), (64 bytes).
    Removing system_hk32f030m.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.text.LED_GPIO_Config), (104 bytes).
    Removing main.o(.ARM.exidx.text.LED_GPIO_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing systick_delay.o(.text), (0 bytes).
    Removing systick_delay.o(.ARM.exidx.text.SysTick_Init), (8 bytes).
    Removing systick_delay.o(.text.SysTick_DelayUs), (56 bytes).
    Removing systick_delay.o(.ARM.exidx.text.SysTick_DelayUs), (8 bytes).
    Removing systick_delay.o(.ARM.exidx.text.SysTick_DelayMs), (8 bytes).
    Removing hk32f030m_it.o(.text), (0 bytes).
    Removing hk32f030m_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing hk32f030m_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing hk32f030m_it.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing hk32f030m_it.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing hk32f030m_it.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing test.o(.text), (0 bytes).
    Removing test.o(.text.imageFileInfo), (200 bytes).
    Removing test.o(.ARM.exidx.text.imageFileInfo), (8 bytes).
    Removing test.o(.rodata.imageLastModified), (4 bytes).
    Removing test.o(.rodata.imageFileTable), (24 bytes).
    Removing test.o(.rodata.imageFileData), (8707 bytes).
    Removing hk32f030m_adc.o(.text), (0 bytes).
    Removing hk32f030m_adc.o(.text.ADC_DeInit), (36 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_DeInit), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_Init), (36 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_StructInit), (14 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_StructInit), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_Cmd), (24 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_Cmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_ClockModeConfig), (4 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_ClockModeConfig), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_JitterCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_JitterCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_AutoPowerOffCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_AutoPowerOffCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_WaitModeCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_WaitModeCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_AnalogWatchdogCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_AnalogWatchdogThresholdsConfig), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogThresholdsConfig), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_AnalogWatchdogSingleChannelConfig), (14 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelConfig), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_AnalogWatchdogSingleChannelCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_VrefintCmd), (26 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_VrefintCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_ChannelConfig), (10 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_ChannelConfig), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_ContinuousModeCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_ContinuousModeCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_DiscModeCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_DiscModeCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_OverrunModeCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_OverrunModeCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_GetCalibrationFactor), (44 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_GetCalibrationFactor), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_StopOfConversion), (10 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_StopOfConversion), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_StartOfConversion), (10 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_StartOfConversion), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_GetConversionValue), (6 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_GetConversionValue), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_ITConfig), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_ITConfig), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_GetFlagStatus), (30 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_GetFlagStatus), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_ClearFlag), (4 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_ClearFlag), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_GetITStatus), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_GetITStatus), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_ClearITPendingBit), (4 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_ClearITPendingBit), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_AWDWakeup_Cmd), (28 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_AWDWakeup_Cmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_Diff_Func), (24 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_Diff_Func), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_InterDelay_Func), (22 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_InterDelay_Func), (8 bytes).
    Removing hk32f030m_awu.o(.text), (0 bytes).
    Removing hk32f030m_awu.o(.text.AWU_DeInit), (16 bytes).
    Removing hk32f030m_awu.o(.ARM.exidx.text.AWU_DeInit), (8 bytes).
    Removing hk32f030m_awu.o(.text.AWU_CLKConfig), (24 bytes).
    Removing hk32f030m_awu.o(.ARM.exidx.text.AWU_CLKConfig), (8 bytes).
    Removing hk32f030m_awu.o(.text.AWU_TimerCounterAndStart), (52 bytes).
    Removing hk32f030m_awu.o(.ARM.exidx.text.AWU_TimerCounterAndStart), (8 bytes).
    Removing hk32f030m_awu.o(.text.AWU_GetFlagStatus), (16 bytes).
    Removing hk32f030m_awu.o(.ARM.exidx.text.AWU_GetFlagStatus), (8 bytes).
    Removing hk32f030m_beep.o(.text), (0 bytes).
    Removing hk32f030m_beep.o(.text.BEEP_DeInit), (28 bytes).
    Removing hk32f030m_beep.o(.ARM.exidx.text.BEEP_DeInit), (8 bytes).
    Removing hk32f030m_beep.o(.text.BEEP_Init), (88 bytes).
    Removing hk32f030m_beep.o(.ARM.exidx.text.BEEP_Init), (8 bytes).
    Removing hk32f030m_beep.o(.text.BEEP_Cmd), (44 bytes).
    Removing hk32f030m_beep.o(.ARM.exidx.text.BEEP_Cmd), (8 bytes).
    Removing hk32f030m_beep.o(.text.BEEP_ClockSelect), (24 bytes).
    Removing hk32f030m_beep.o(.ARM.exidx.text.BEEP_ClockSelect), (8 bytes).
    Removing hk32f030m_beep.o(.text.BEEP_SetPrescaler), (20 bytes).
    Removing hk32f030m_beep.o(.ARM.exidx.text.BEEP_SetPrescaler), (8 bytes).
    Removing hk32f030m_beep.o(.text.BEEP_SetTRGOPrescaler), (20 bytes).
    Removing hk32f030m_beep.o(.ARM.exidx.text.BEEP_SetTRGOPrescaler), (8 bytes).
    Removing hk32f030m_beep.o(.text.BEEP_ReadBeepStatus), (12 bytes).
    Removing hk32f030m_beep.o(.ARM.exidx.text.BEEP_ReadBeepStatus), (8 bytes).
    Removing hk32f030m_beep.o(.text.BEEP_TRGOCmd), (44 bytes).
    Removing hk32f030m_beep.o(.ARM.exidx.text.BEEP_TRGOCmd), (8 bytes).
    Removing hk32f030m_crc.o(.text), (0 bytes).
    Removing hk32f030m_crc.o(.text.CRC_DeInit), (24 bytes).
    Removing hk32f030m_crc.o(.ARM.exidx.text.CRC_DeInit), (8 bytes).
    Removing hk32f030m_crc.o(.text.CRC_ResetDR), (16 bytes).
    Removing hk32f030m_crc.o(.ARM.exidx.text.CRC_ResetDR), (8 bytes).
    Removing hk32f030m_crc.o(.text.CRC_ReverseInputDataSelect), (20 bytes).
    Removing hk32f030m_crc.o(.ARM.exidx.text.CRC_ReverseInputDataSelect), (8 bytes).
    Removing hk32f030m_crc.o(.text.CRC_ReverseOutputDataCmd), (24 bytes).
    Removing hk32f030m_crc.o(.ARM.exidx.text.CRC_ReverseOutputDataCmd), (8 bytes).
    Removing hk32f030m_crc.o(.text.CRC_SetInitRegister), (12 bytes).
    Removing hk32f030m_crc.o(.ARM.exidx.text.CRC_SetInitRegister), (8 bytes).
    Removing hk32f030m_crc.o(.text.CRC_CalcCRC), (12 bytes).
    Removing hk32f030m_crc.o(.ARM.exidx.text.CRC_CalcCRC), (8 bytes).
    Removing hk32f030m_crc.o(.text.CRC_CalcBlockCRC), (24 bytes).
    Removing hk32f030m_crc.o(.ARM.exidx.text.CRC_CalcBlockCRC), (8 bytes).
    Removing hk32f030m_crc.o(.text.CRC_GetCRC), (12 bytes).
    Removing hk32f030m_crc.o(.ARM.exidx.text.CRC_GetCRC), (8 bytes).
    Removing hk32f030m_crc.o(.text.CRC_SetIDRegister), (12 bytes).
    Removing hk32f030m_crc.o(.ARM.exidx.text.CRC_SetIDRegister), (8 bytes).
    Removing hk32f030m_crc.o(.text.CRC_GetIDRegister), (12 bytes).
    Removing hk32f030m_crc.o(.ARM.exidx.text.CRC_GetIDRegister), (8 bytes).
    Removing hk32f030m_dbgmcu.o(.text), (0 bytes).
    Removing hk32f030m_dbgmcu.o(.text.DBGMCU_GetREVID), (12 bytes).
    Removing hk32f030m_dbgmcu.o(.ARM.exidx.text.DBGMCU_GetREVID), (8 bytes).
    Removing hk32f030m_dbgmcu.o(.text.DBGMCU_GetDEVID), (20 bytes).
    Removing hk32f030m_dbgmcu.o(.ARM.exidx.text.DBGMCU_GetDEVID), (8 bytes).
    Removing hk32f030m_dbgmcu.o(.text.DBGMCU_Config), (28 bytes).
    Removing hk32f030m_dbgmcu.o(.ARM.exidx.text.DBGMCU_Config), (8 bytes).
    Removing hk32f030m_dbgmcu.o(.text.DBGMCU_APB1PeriphConfig), (28 bytes).
    Removing hk32f030m_dbgmcu.o(.ARM.exidx.text.DBGMCU_APB1PeriphConfig), (8 bytes).
    Removing hk32f030m_exti.o(.text), (0 bytes).
    Removing hk32f030m_exti.o(.text.EXTI_DeInit), (24 bytes).
    Removing hk32f030m_exti.o(.ARM.exidx.text.EXTI_DeInit), (8 bytes).
    Removing hk32f030m_exti.o(.text.EXTI_Init), (96 bytes).
    Removing hk32f030m_exti.o(.ARM.exidx.text.EXTI_Init), (8 bytes).
    Removing hk32f030m_exti.o(.text.EXTI_StructInit), (14 bytes).
    Removing hk32f030m_exti.o(.ARM.exidx.text.EXTI_StructInit), (8 bytes).
    Removing hk32f030m_exti.o(.text.EXTI_GenerateSWInterrupt), (16 bytes).
    Removing hk32f030m_exti.o(.ARM.exidx.text.EXTI_GenerateSWInterrupt), (8 bytes).
    Removing hk32f030m_exti.o(.text.EXTI_GetFlagStatus), (20 bytes).
    Removing hk32f030m_exti.o(.ARM.exidx.text.EXTI_GetFlagStatus), (8 bytes).
    Removing hk32f030m_exti.o(.text.EXTI_GetITStatus), (28 bytes).
    Removing hk32f030m_exti.o(.ARM.exidx.text.EXTI_GetITStatus), (8 bytes).
    Removing hk32f030m_exti.o(.text.EXTI_ClearFlag), (12 bytes).
    Removing hk32f030m_exti.o(.ARM.exidx.text.EXTI_ClearFlag), (8 bytes).
    Removing hk32f030m_exti.o(.text.EXTI_ClearITPendingBit), (12 bytes).
    Removing hk32f030m_exti.o(.ARM.exidx.text.EXTI_ClearITPendingBit), (8 bytes).
    Removing hk32f030m_flash.o(.text), (0 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_SetLatency), (20 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_SetLatency), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_Unlock), (32 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_Unlock), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_Lock), (16 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_Lock), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_ErasePage), (152 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_ErasePage), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_WaitForLastOperation), (96 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_EraseAllPages), (148 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_EraseAllPages), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_ProgramHalfWord), (160 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_ProgramHalfWord), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_ProgramByte), (160 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_ProgramByte), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_Unlock), (32 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_Unlock), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_Lock), (20 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_Lock), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_EraseByte), (160 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_EraseByte), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_WRPConfig), (1044 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_WRPConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_RDPConfig), (300 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_RDPConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_UserConfig), (324 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_UserConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_IWDG_RLRConfig), (552 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_IWDG_RLRConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_LSILPConfig), (368 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_LSILPConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_DBGCLKConfig), (368 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_DBGCLKConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_WriteUser), (164 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_WriteUser), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_ProgramData), (156 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_ProgramData), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_GetUser), (16 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_GetUser), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_GetWRP), (12 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_GetWRP), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_GetRDP), (20 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_GetRDP), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_ITConfig), (28 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_ITConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_GetFlagStatus), (20 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_GetFlagStatus), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_ClearFlag), (12 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_ClearFlag), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_GetStatus), (32 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_GetStatus), (8 bytes).
    Removing hk32f030m_flash.o(.text.EEPROM_EraseByte), (152 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.EEPROM_EraseByte), (8 bytes).
    Removing hk32f030m_flash.o(.text.EEPROM_ProgramByte), (144 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.EEPROM_ProgramByte), (8 bytes).
    Removing hk32f030m_flash.o(.text.Sys_GetDevice64BitUID), (16 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.Sys_GetDevice64BitUID), (8 bytes).
    Removing hk32f030m_gpio.o(.text), (0 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_DeInit), (44 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_DeInit), (8 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_StructInit), (16 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_StructInit), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_PinLockConfig), (36 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_ReadInputDataBit), (10 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_ReadInputData), (6 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadInputData), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_ReadOutputDataBit), (10 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_ReadOutputData), (6 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData), (8 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_SetBits), (8 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ResetBits), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_WriteBit), (16 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_WriteBit), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_Write), (4 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_Write), (8 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_Toggle), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_PinAFConfig), (32 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_IOMUX_PinAFConfig), (136 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_IOMUX_PinAFConfig), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_IOMUX_ChangePin), (28 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_IOMUX_ChangePin), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_IOMUX_SetTIM2CN1_Source), (12 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_IOMUX_SetTIM2CN1_Source), (8 bytes).
    Removing hk32f030m_gpio.o(.rodata.cst16), (16 bytes).
    Removing hk32f030m_i2c.o(.text), (0 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_DeInit), (36 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_DeInit), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_Init), (96 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_Init), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_StructInit), (22 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_StructInit), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_Cmd), (16 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_Cmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_SoftwareResetCmd), (18 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_SoftwareResetCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_ITConfig), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_ITConfig), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_StretchClockCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_StretchClockCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_StopModeCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_StopModeCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_DualAddressCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_DualAddressCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_OwnAddress2Config), (28 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_OwnAddress2Config), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_GeneralCallCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_GeneralCallCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_SlaveByteControlCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_SlaveByteControlCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_SlaveAddressConfig), (24 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_SlaveAddressConfig), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_10BitAddressingModeCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_10BitAddressingModeCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_AutoEndCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_AutoEndCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_ReloadCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_ReloadCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_NumberOfBytesConfig), (16 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_NumberOfBytesConfig), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_MasterRequestConfig), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_MasterRequestConfig), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_GenerateSTART), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_GenerateSTART), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_GenerateSTOP), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_GenerateSTOP), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_10BitAddressHeaderCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_10BitAddressHeaderCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_AcknowledgeConfig), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_AcknowledgeConfig), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_GetAddressMatched), (10 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_GetAddressMatched), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_GetTransferDirection), (12 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_GetTransferDirection), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_TransferHandling), (36 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_TransferHandling), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_SMBusAlertCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_SMBusAlertCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_ClockTimeoutCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_ClockTimeoutCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_ExtendedClockTimeoutCmd), (24 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_ExtendedClockTimeoutCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_IdleClockTimeoutCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_IdleClockTimeoutCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_TimeoutAConfig), (24 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_TimeoutAConfig), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_TimeoutBConfig), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_TimeoutBConfig), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_CalculatePEC), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_CalculatePEC), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_PECRequestCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_PECRequestCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_GetPEC), (6 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_GetPEC), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_ReadRegister), (22 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_ReadRegister), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_SendData), (4 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_SendData), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_ReceiveData), (6 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_ReceiveData), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_GetFlagStatus), (10 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_GetFlagStatus), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_ClearFlag), (4 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_ClearFlag), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_GetITStatus), (48 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_GetITStatus), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_ClearITPendingBit), (4 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_ClearITPendingBit), (8 bytes).
    Removing hk32f030m_iwdg.o(.text), (0 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_WriteAccessCmd), (12 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_WriteAccessCmd), (8 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_SetPrescaler), (12 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_SetPrescaler), (8 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_SetReload), (12 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_SetReload), (8 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_ReloadCounter), (16 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_ReloadCounter), (8 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_SetWindowValue), (12 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_SetWindowValue), (8 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_Enable), (16 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_Enable), (8 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_GetFlagStatus), (20 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_GetFlagStatus), (8 bytes).
    Removing hk32f030m_misc.o(.text), (0 bytes).
    Removing hk32f030m_misc.o(.text.NVIC_Init), (80 bytes).
    Removing hk32f030m_misc.o(.ARM.exidx.text.NVIC_Init), (8 bytes).
    Removing hk32f030m_misc.o(.text.NVIC_SystemLPConfig), (28 bytes).
    Removing hk32f030m_misc.o(.ARM.exidx.text.NVIC_SystemLPConfig), (8 bytes).
    Removing hk32f030m_misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig), (8 bytes).
    Removing hk32f030m_pwr.o(.text), (0 bytes).
    Removing hk32f030m_pwr.o(.text.PWR_DeInit), (22 bytes).
    Removing hk32f030m_pwr.o(.ARM.exidx.text.PWR_DeInit), (8 bytes).
    Removing hk32f030m_pwr.o(.text.PWR_EnterSleepMode), (32 bytes).
    Removing hk32f030m_pwr.o(.ARM.exidx.text.PWR_EnterSleepMode), (8 bytes).
    Removing hk32f030m_pwr.o(.text.PWR_EnterDeepSleepMode), (136 bytes).
    Removing hk32f030m_pwr.o(.ARM.exidx.text.PWR_EnterDeepSleepMode), (8 bytes).
    Removing hk32f030m_pwr.o(.text.PWR_EnterStopMode), (92 bytes).
    Removing hk32f030m_pwr.o(.ARM.exidx.text.PWR_EnterStopMode), (8 bytes).
    Removing hk32f030m_pwr.o(.text.PWR_SetLDO_RefVolToADC), (28 bytes).
    Removing hk32f030m_pwr.o(.ARM.exidx.text.PWR_SetLDO_RefVolToADC), (8 bytes).
    Removing hk32f030m_rcc.o(.text), (0 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_DeInit), (40 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_DeInit), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_WaitForStartUp), (116 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_WaitForStartUp), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_GetFlagStatus), (40 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_AdjustHSICalibrationValue), (20 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_HSICmd), (24 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_HSICmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_LSICmd), (24 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_LSICmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_EXTCmd), (88 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_EXTCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_ClockSecuritySystemCmd), (28 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_MCOConfig), (28 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_MCOConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_SYSCLKConfig), (20 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_GetSYSCLKSource), (16 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_HCLKConfig), (20 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_HCLKConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_PCLKConfig), (20 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_PCLKConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_ADCCLKConfig), (64 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_I2CCLKConfig), (24 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_I2CCLKConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_USARTCLKConfig), (24 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_USARTCLKConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_GetClocksFreq), (224 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_APB2PeriphClockCmd), (28 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_APB1PeriphClockCmd), (28 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_AHBPeriphResetCmd), (28 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_AHBPeriphResetCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd), (28 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_APB1PeriphResetCmd), (28 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_ITConfig), (28 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_ITConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_ClearFlag), (20 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_ClearFlag), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_GetITStatus), (20 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetITStatus), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_ClearITPendingBit), (12 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit), (8 bytes).
    Removing hk32f030m_rcc.o(.rodata.AHBPrescTable), (32 bytes).
    Removing hk32f030m_rcc.o(.rodata.APBPrescTable), (8 bytes).
    Removing hk32f030m_spi.o(.text), (0 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_DeInit), (36 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_DeInit), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_StructInit), (26 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_StructInit), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_Init), (88 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_Init), (8 bytes).
    Removing hk32f030m_spi.o(.text.I2S_StructInit), (14 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.I2S_StructInit), (8 bytes).
    Removing hk32f030m_spi.o(.text.I2S_Init), (184 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.I2S_Init), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_Cmd), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_Cmd), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_TIModeCmd), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_TIModeCmd), (8 bytes).
    Removing hk32f030m_spi.o(.text.I2S_Cmd), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.I2S_Cmd), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_DataSizeConfig), (16 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_DataSizeConfig), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_RxFIFOThresholdConfig), (20 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_RxFIFOThresholdConfig), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_BiDirectionalLineConfig), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_BiDirectionalLineConfig), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_NSSInternalSoftwareConfig), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_NSSInternalSoftwareConfig), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_SSOutputCmd), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_SSOutputCmd), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_NSSPulseModeCmd), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_NSSPulseModeCmd), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_SendData8), (4 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_SendData8), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_SendData16), (4 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_SendData16), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_ReceiveData8), (4 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_ReceiveData8), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_ReceiveData16), (6 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_ReceiveData16), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_CRCLengthConfig), (20 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_CRCLengthConfig), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_CalculateCRC), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_CalculateCRC), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_TransmitCRC), (12 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_TransmitCRC), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_GetCRC), (20 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_GetCRC), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_GetCRCPolynomial), (6 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_GetCRCPolynomial), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_ITConfig), (30 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_ITConfig), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_GetTransmissionFIFOStatus), (10 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_GetTransmissionFIFOStatus), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_GetReceptionFIFOStatus), (10 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_GetReceptionFIFOStatus), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_GetFlagStatus), (10 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_GetFlagStatus), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_ClearFlag), (12 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_ClearFlag), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_GetITStatus), (32 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_GetITStatus), (8 bytes).
    Removing hk32f030m_syscfg.o(.text), (0 bytes).
    Removing hk32f030m_syscfg.o(.text.SYSCFG_DeInit), (22 bytes).
    Removing hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_DeInit), (8 bytes).
    Removing hk32f030m_syscfg.o(.text.SYSCFG_Lockup_Tim1BreakConfig), (24 bytes).
    Removing hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_Lockup_Tim1BreakConfig), (8 bytes).
    Removing hk32f030m_syscfg.o(.text.SYSCFG_MemoryRemapConfig), (28 bytes).
    Removing hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_MemoryRemapConfig), (8 bytes).
    Removing hk32f030m_syscfg.o(.text.SYSCFG_EXTILineConfig), (36 bytes).
    Removing hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_EXTILineConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text), (0 bytes).
    Removing hk32f030m_tim.o(.text.TIM_DeInit), (88 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_DeInit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_TimeBaseInit), (96 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_TimeBaseInit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_TimeBaseStructInit), (12 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_PrescalerConfig), (6 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_PrescalerConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_CounterModeConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_CounterModeConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetCounter), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCounter), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetAutoreload), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetAutoreload), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetCounter), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCounter), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetPrescaler), (6 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetPrescaler), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_UpdateDisableConfig), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_UpdateRequestConfig), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ARRPreloadConfig), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectOnePulseMode), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetClockDivision), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetClockDivision), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_Cmd), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_Cmd), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_BDTRConfig), (30 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_BDTRConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_BDTRStructInit), (18 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_BDTRStructInit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_CtrlPWMOutputs), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC1Init), (104 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1Init), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC2Init), (128 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2Init), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC3Init), (124 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3Init), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC4Init), (112 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4Init), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OCStructInit), (14 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OCStructInit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectOCxM), (68 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOCxM), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetCompare1), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare1), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetCompare2), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare2), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetCompare3), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare3), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetCompare4), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare4), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ForcedOC1Config), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ForcedOC2Config), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ForcedOC3Config), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ForcedOC4Config), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_CCPreloadControl), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_CCPreloadControl), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC1PreloadConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC2PreloadConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC3PreloadConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC4PreloadConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC1FastConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1FastConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC2FastConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2FastConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC3FastConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3FastConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC4FastConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4FastConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ClearOC1Ref), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ClearOC2Ref), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ClearOC3Ref), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ClearOC4Ref), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC1PolarityConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC1NPolarityConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC2PolarityConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC2NPolarityConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC3PolarityConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC3NPolarityConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC4PolarityConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectOCREFClear), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOCREFClear), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_CCxCmd), (26 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_CCxCmd), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_CCxNCmd), (26 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_CCxNCmd), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectCOM), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectCOM), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ICInit), (316 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ICInit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetIC1Prescaler), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetIC2Prescaler), (24 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetIC3Prescaler), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetIC4Prescaler), (24 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ICStructInit), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ICStructInit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_PWMIConfig), (300 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_PWMIConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetCapture1), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture1), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetCapture2), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture2), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetCapture3), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture3), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetCapture4), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture4), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ITConfig), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ITConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GenerateEvent), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GenerateEvent), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetFlagStatus), (10 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetFlagStatus), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ClearFlag), (12 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearFlag), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetITStatus), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetITStatus), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ClearITPendingBit), (12 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_InternalClockConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_InternalClockConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ITRxExternalClockConfig), (24 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectInputTrigger), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_TIxExternalClockConfig), (124 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ETRClockMode1Config), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ETRConfig), (18 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ETRConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ETRClockMode2Config), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectOutputTrigger), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectSlaveMode), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectMasterSlaveMode), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_EncoderInterfaceConfig), (52 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectHallSensor), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectHallSensor), (8 bytes).
    Removing hk32f030m_usart.o(.text), (0 bytes).
    Removing hk32f030m_usart.o(.text.USART_DeInit), (36 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_DeInit), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_Init), (176 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_Init), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_StructInit), (22 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_StructInit), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_ClockInit), (26 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ClockInit), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_ClockStructInit), (12 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ClockStructInit), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_Cmd), (16 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_Cmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_DirectionModeCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_DirectionModeCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_OverSampling8Cmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_OverSampling8Cmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_OneBitMethodCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_OneBitMethodCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_MSBFirstCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_MSBFirstCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_DataInvCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_DataInvCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_InvPinCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_InvPinCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SWAPPinCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SWAPPinCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_ReceiverTimeOutCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ReceiverTimeOutCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetReceiverTimeOut), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetReceiverTimeOut), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetPrescaler), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetPrescaler), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_STOPModeCmd), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_STOPModeCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_StopModeWakeUpSourceConfig), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_StopModeWakeUpSourceConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_AutoBaudRateCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_AutoBaudRateCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_AutoBaudRateConfig), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_AutoBaudRateConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SendData), (12 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SendData), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_ReceiveData), (12 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ReceiveData), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetAddress), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetAddress), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_MuteModeCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_MuteModeCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_MuteModeWakeUpConfig), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_MuteModeWakeUpConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_AddressDetectionConfig), (16 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_AddressDetectionConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_LINBreakDetectLengthConfig), (16 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_LINBreakDetectLengthConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_LINCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_LINCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_HalfDuplexCmd), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_HalfDuplexCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetGuardTime), (16 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetGuardTime), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SmartCardCmd), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SmartCardCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SmartCardNACKCmd), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SmartCardNACKCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetAutoRetryCount), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetAutoRetryCount), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetBlockLength), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetBlockLength), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_IrDAConfig), (16 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_IrDAConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_IrDACmd), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_IrDACmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_DECmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_DECmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_DEPolarityConfig), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_DEPolarityConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetDEAssertionTime), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetDEAssertionTime), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetDEDeassertionTime), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetDEDeassertionTime), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_ITConfig), (50 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ITConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_RequestCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_RequestCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_OverrunDetectionConfig), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_OverrunDetectionConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_GetFlagStatus), (10 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_GetFlagStatus), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_ClearFlag), (4 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ClearFlag), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_GetITStatus), (44 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_GetITStatus), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_ClearITPendingBit), (10 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ClearITPendingBit), (8 bytes).
    Removing hk32f030m_wwdg.o(.text), (0 bytes).
    Removing hk32f030m_wwdg.o(.text.WWDG_DeInit), (22 bytes).
    Removing hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_DeInit), (8 bytes).
    Removing hk32f030m_wwdg.o(.text.WWDG_SetPrescaler), (20 bytes).
    Removing hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_SetPrescaler), (8 bytes).
    Removing hk32f030m_wwdg.o(.text.WWDG_SetWindowValue), (36 bytes).
    Removing hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_SetWindowValue), (8 bytes).
    Removing hk32f030m_wwdg.o(.text.WWDG_EnableIT), (20 bytes).
    Removing hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_EnableIT), (8 bytes).
    Removing hk32f030m_wwdg.o(.text.WWDG_SetCounter), (16 bytes).
    Removing hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_SetCounter), (8 bytes).
    Removing hk32f030m_wwdg.o(.text.WWDG_Enable), (16 bytes).
    Removing hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_Enable), (8 bytes).
    Removing hk32f030m_wwdg.o(.text.WWDG_GetFlagStatus), (16 bytes).
    Removing hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_GetFlagStatus), (8 bytes).
    Removing hk32f030m_wwdg.o(.text.WWDG_ClearFlag), (12 bytes).
    Removing hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_ClearFlag), (8 bytes).

772 unused section(s) (total 26087 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../Libraries/CMSIS/HK32F030M/Source/startup_hk32f030mf4p6.s 0x00000000   Number         0  startup_hk32f030mf4p6.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    hk32f030m_adc.c                          0x00000000   Number         0  hk32f030m_adc.o ABSOLUTE
    hk32f030m_awu.c                          0x00000000   Number         0  hk32f030m_awu.o ABSOLUTE
    hk32f030m_beep.c                         0x00000000   Number         0  hk32f030m_beep.o ABSOLUTE
    hk32f030m_crc.c                          0x00000000   Number         0  hk32f030m_crc.o ABSOLUTE
    hk32f030m_dbgmcu.c                       0x00000000   Number         0  hk32f030m_dbgmcu.o ABSOLUTE
    hk32f030m_exti.c                         0x00000000   Number         0  hk32f030m_exti.o ABSOLUTE
    hk32f030m_flash.c                        0x00000000   Number         0  hk32f030m_flash.o ABSOLUTE
    hk32f030m_gpio.c                         0x00000000   Number         0  hk32f030m_gpio.o ABSOLUTE
    hk32f030m_i2c.c                          0x00000000   Number         0  hk32f030m_i2c.o ABSOLUTE
    hk32f030m_it.c                           0x00000000   Number         0  hk32f030m_it.o ABSOLUTE
    hk32f030m_iwdg.c                         0x00000000   Number         0  hk32f030m_iwdg.o ABSOLUTE
    hk32f030m_misc.c                         0x00000000   Number         0  hk32f030m_misc.o ABSOLUTE
    hk32f030m_pwr.c                          0x00000000   Number         0  hk32f030m_pwr.o ABSOLUTE
    hk32f030m_rcc.c                          0x00000000   Number         0  hk32f030m_rcc.o ABSOLUTE
    hk32f030m_spi.c                          0x00000000   Number         0  hk32f030m_spi.o ABSOLUTE
    hk32f030m_syscfg.c                       0x00000000   Number         0  hk32f030m_syscfg.o ABSOLUTE
    hk32f030m_tim.c                          0x00000000   Number         0  hk32f030m_tim.o ABSOLUTE
    hk32f030m_usart.c                        0x00000000   Number         0  hk32f030m_usart.o ABSOLUTE
    hk32f030m_wwdg.c                         0x00000000   Number         0  hk32f030m_wwdg.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    system_hk32f030m.c                       0x00000000   Number         0  system_hk32f030m.o ABSOLUTE
    systick_delay.c                          0x00000000   Number         0  systick_delay.o ABSOLUTE
    test                                     0x00000000   Number         0  test.o ABSOLUTE
    RESET                                    0x08000000   Section      176  startup_hk32f030mf4p6.o(RESET)
    !!!main                                  0x080000b0   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000b8   Section       60  __scatter.o(!!!scatter)
    !!handler_copy                           0x080000f4   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x08000110   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0800012c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x0800012e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x0800012e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x0800012e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x0800012e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800012e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x0800012e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x0800012e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800012e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800012e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800012e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800012e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800012e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800012e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800012e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800012e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800012e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x0800012e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x0800012e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800012e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800012e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x0800012e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000130   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000132   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000132   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000132   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000132   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000132   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000132   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000132   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000134   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000134   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000134   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x0800013a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x0800013a   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0800013e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0800013e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x08000146   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000148   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000148   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x0800014c   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x08000154   Section       56  startup_hk32f030mf4p6.o(.text)
    .text                                    0x0800018c   Section        0  heapauxi.o(.text)
    .text                                    0x08000192   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x080001d0   Section        0  exit.o(.text)
    .text                                    0x080001e0   Section        8  libspace.o(.text)
    .text                                    0x080001e8   Section        0  sys_exit.o(.text)
    .text                                    0x080001f4   Section        2  use_no_semi.o(.text)
    [Anonymous Symbol]                       0x080001f6   Section        0  hk32f030m_gpio.o(.text.GPIO_Init)
    .text                                    0x080001f6   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x08000288   Section        0  hk32f030m_gpio.o(.text.GPIO_ResetBits)
    [Anonymous Symbol]                       0x0800028c   Section        0  hk32f030m_gpio.o(.text.GPIO_SetBits)
    [Anonymous Symbol]                       0x08000290   Section        0  hk32f030m_gpio.o(.text.GPIO_Toggle)
    [Anonymous Symbol]                       0x08000298   Section        0  hk32f030m_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x0800029a   Section        0  hk32f030m_it.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x0800029c   Section        0  hk32f030m_it.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x080002a0   Section        0  hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd)
    __arm_cp.7_0                             0x080002b8   Number         4  hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd)
    [Anonymous Symbol]                       0x080002bc   Section        0  hk32f030m_it.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x080002c0   Section        0  hk32f030m_misc.o(.text.SysTick_CLKSourceConfig)
    [Anonymous Symbol]                       0x080002d8   Section        0  systick_delay.o(.text.SysTick_DelayMs)
    __arm_cp.2_1                             0x08000304   Number         4  systick_delay.o(.text.SysTick_DelayMs)
    __arm_cp.2_2                             0x08000308   Number         4  systick_delay.o(.text.SysTick_DelayMs)
    [Anonymous Symbol]                       0x0800030c   Section        0  hk32f030m_it.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x08000310   Section        0  systick_delay.o(.text.SysTick_Init)
    __arm_cp.0_0                             0x08000338   Number         4  systick_delay.o(.text.SysTick_Init)
    __arm_cp.0_1                             0x0800033c   Number         4  systick_delay.o(.text.SysTick_Init)
    __arm_cp.0_2                             0x08000340   Number         4  systick_delay.o(.text.SysTick_Init)
    [Anonymous Symbol]                       0x08000344   Section        0  system_hk32f030m.o(.text.SystemInit)
    __arm_cp.1_0                             0x08000408   Number         4  system_hk32f030m.o(.text.SystemInit)
    __arm_cp.1_1                             0x0800040c   Number         4  system_hk32f030m.o(.text.SystemInit)
    __arm_cp.1_2                             0x08000410   Number         4  system_hk32f030m.o(.text.SystemInit)
    __arm_cp.1_3                             0x08000414   Number         4  system_hk32f030m.o(.text.SystemInit)
    __arm_cp.1_4                             0x08000418   Number         4  system_hk32f030m.o(.text.SystemInit)
    [Anonymous Symbol]                       0x0800041c   Section        0  system_hk32f030m.o(.text.clockFailure)
    __arm_cp.0_0                             0x08000430   Number         4  system_hk32f030m.o(.text.clockFailure)
    __arm_cp.0_1                             0x08000434   Number         4  system_hk32f030m.o(.text.clockFailure)
    [Anonymous Symbol]                       0x08000438   Section        0  main.o(.text.main)
    __arm_cp.1_0                             0x0800062c   Number         4  main.o(.text.main)
    __arm_cp.1_1                             0x08000630   Number         4  main.o(.text.main)
    .text_divfast                            0x08000634   Section      502  aeabi_sdivfast.o(.text_divfast)
    .bss                                     0x20000008   Section       96  libspace.o(.bss)
    fac_us                                   0x20000068   Data           4  systick_delay.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000068   Section        0  systick_delay.o(.bss..L_MergedGlobals)
    fac_ms                                   0x2000006c   Data           4  systick_delay.o(.bss..L_MergedGlobals)
    Heap_Mem                                 0x20000070   Data         512  startup_hk32f030mf4p6.o(HEAP)
    HEAP                                     0x20000070   Section      512  startup_hk32f030mf4p6.o(HEAP)
    Stack_Mem                                0x20000270   Data        1024  startup_hk32f030mf4p6.o(STACK)
    STACK                                    0x20000270   Section     1024  startup_hk32f030mf4p6.o(STACK)
    __initial_sp                             0x20000670   Data           0  startup_hk32f030mf4p6.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000b0   Number         0  startup_hk32f030mf4p6.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_hk32f030mf4p6.o(RESET)
    __Vectors_End                            0x080000b0   Data           0  startup_hk32f030mf4p6.o(RESET)
    __main                                   0x080000b1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000b9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000b9   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000b9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x080000f5   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x08000111   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0800012d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x0800012f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x08000131   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000133   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000133   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000133   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000133   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000133   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000133   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000133   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000135   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000135   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000135   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x0800013b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x0800013b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x0800013f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0800013f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x08000147   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000149   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000149   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x0800014d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x08000155   Thumb Code     8  startup_hk32f030mf4p6.o(.text)
    ADC1_IRQHandler                          0x08000167   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    DMA1_Channel1_IRQHandler                 0x08000167   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    DMA1_Channel2_3_IRQHandler               0x08000167   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    DMA1_Channel4_5_IRQHandler               0x08000167   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    EXTI0_1_IRQHandler                       0x08000167   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    EXTI2_3_IRQHandler                       0x08000167   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    EXTI4_15_IRQHandler                      0x08000167   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    FLASH_IRQHandler                         0x08000167   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    I2C1_IRQHandler                          0x08000167   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    RCC_IRQHandler                           0x08000167   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    RTC_IRQHandler                           0x08000167   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    SPI1_IRQHandler                          0x08000167   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    TIM14_IRQHandler                         0x08000167   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    TIM16_IRQHandler                         0x08000167   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    TIM17_IRQHandler                         0x08000167   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    TIM1_BRK_UP_TRG_COM_IRQHandler           0x08000167   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    TIM1_CC_IRQHandler                       0x08000167   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    TIM3_IRQHandler                          0x08000167   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    USART1_IRQHandler                        0x08000167   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    WWDG_IRQHandler                          0x08000167   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    __user_initial_stackheap                 0x08000169   Thumb Code     0  startup_hk32f030mf4p6.o(.text)
    __use_two_region_memory                  0x0800018d   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0800018f   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x08000191   Thumb Code     2  heapauxi.o(.text)
    __user_setup_stackheap                   0x08000193   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x080001d1   Thumb Code    16  exit.o(.text)
    __user_libspace                          0x080001e1   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x080001e1   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x080001e1   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x080001e9   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x080001f5   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x080001f5   Thumb Code     2  use_no_semi.o(.text)
    GPIO_Init                                0x080001f7   Thumb Code   146  hk32f030m_gpio.o(.text.GPIO_Init)
    __semihosting_library_function           0x080001f7   Thumb Code     0  indicate_semi.o(.text)
    GPIO_ResetBits                           0x08000289   Thumb Code     4  hk32f030m_gpio.o(.text.GPIO_ResetBits)
    GPIO_SetBits                             0x0800028d   Thumb Code     4  hk32f030m_gpio.o(.text.GPIO_SetBits)
    GPIO_Toggle                              0x08000291   Thumb Code     8  hk32f030m_gpio.o(.text.GPIO_Toggle)
    HardFault_Handler                        0x08000299   Thumb Code     2  hk32f030m_it.o(.text.HardFault_Handler)
    NMI_Handler                              0x0800029b   Thumb Code     2  hk32f030m_it.o(.text.NMI_Handler)
    PendSV_Handler                           0x0800029d   Thumb Code     2  hk32f030m_it.o(.text.PendSV_Handler)
    RCC_AHBPeriphClockCmd                    0x080002a1   Thumb Code    28  hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd)
    SVC_Handler                              0x080002bd   Thumb Code     2  hk32f030m_it.o(.text.SVC_Handler)
    SysTick_CLKSourceConfig                  0x080002c1   Thumb Code    24  hk32f030m_misc.o(.text.SysTick_CLKSourceConfig)
    SysTick_DelayMs                          0x080002d9   Thumb Code    52  systick_delay.o(.text.SysTick_DelayMs)
    SysTick_Handler                          0x0800030d   Thumb Code     2  hk32f030m_it.o(.text.SysTick_Handler)
    SysTick_Init                             0x08000311   Thumb Code    52  systick_delay.o(.text.SysTick_Init)
    SystemInit                               0x08000345   Thumb Code   216  system_hk32f030m.o(.text.SystemInit)
    clockFailure                             0x0800041d   Thumb Code    28  system_hk32f030m.o(.text.clockFailure)
    main                                     0x08000439   Thumb Code   508  main.o(.text.main)
    __aeabi_uidiv                            0x08000635   Thumb Code    68  aeabi_sdivfast.o(.text_divfast)
    __aeabi_idiv                             0x08000679   Thumb Code   434  aeabi_sdivfast.o(.text_divfast)
    Region$$Table$$Base                      0x0800082c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0800084c   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_hk32f030m.o(.data.SystemCoreClock)
    __libspace_start                         0x20000008   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000068   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000b1

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00000858, Max: 0x00004000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x0000084c, Max: 0x00004000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000b0   Data   RO            3    RESET               startup_hk32f030mf4p6.o
    0x080000b0   0x080000b0   0x00000008   Code   RO          970  * !!!main             c_p.l(__main.o)
    0x080000b8   0x080000b8   0x0000003c   Code   RO         1145    !!!scatter          c_p.l(__scatter.o)
    0x080000f4   0x080000f4   0x0000001a   Code   RO         1147    !!handler_copy      c_p.l(__scatter_copy.o)
    0x0800010e   0x0800010e   0x00000002   PAD
    0x08000110   0x08000110   0x0000001c   Code   RO         1149    !!handler_zi        c_p.l(__scatter_zi.o)
    0x0800012c   0x0800012c   0x00000002   Code   RO         1008    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         1022    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         1024    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         1027    .ARM.Collect$$libinit$$0000000A  c_p.l(libinit2.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         1029    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         1031    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         1034    .ARM.Collect$$libinit$$00000011  c_p.l(libinit2.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         1036    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         1038    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         1040    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         1042    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         1044    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         1046    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         1048    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         1050    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         1052    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         1054    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         1058    .ARM.Collect$$libinit$$0000002C  c_p.l(libinit2.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         1060    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         1062    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         1064    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x0800012e   0x0800012e   0x00000002   Code   RO         1065    .ARM.Collect$$libinit$$00000033  c_p.l(libinit2.o)
    0x08000130   0x08000130   0x00000002   Code   RO         1100    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x08000132   0x08000132   0x00000000   Code   RO         1128    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x08000132   0x08000132   0x00000000   Code   RO         1130    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x08000132   0x08000132   0x00000000   Code   RO         1133    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x08000132   0x08000132   0x00000000   Code   RO         1136    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x08000132   0x08000132   0x00000000   Code   RO         1138    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x08000132   0x08000132   0x00000000   Code   RO         1141    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x08000132   0x08000132   0x00000002   Code   RO         1142    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x08000134   0x08000134   0x00000000   Code   RO          972    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x08000134   0x08000134   0x00000000   Code   RO          978    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x08000134   0x08000134   0x00000006   Code   RO          990    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO          980    .ARM.Collect$$rtentry$$00000009  c_p.l(__rtentry2.o)
    0x0800013a   0x0800013a   0x00000004   Code   RO          981    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          983    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x0800013e   0x0800013e   0x00000008   Code   RO          984    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x08000146   0x08000146   0x00000002   Code   RO         1013    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x08000148   0x08000148   0x00000000   Code   RO         1071    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x08000148   0x08000148   0x00000004   Code   RO         1072    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x0800014c   0x0800014c   0x00000006   Code   RO         1073    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x08000152   0x08000152   0x00000002   PAD
    0x08000154   0x08000154   0x00000038   Code   RO            4    .text               startup_hk32f030mf4p6.o
    0x0800018c   0x0800018c   0x00000006   Code   RO          968    .text               c_p.l(heapauxi.o)
    0x08000192   0x08000192   0x0000003e   Code   RO          994    .text               c_p.l(sys_stackheap_outer.o)
    0x080001d0   0x080001d0   0x00000010   Code   RO          997    .text               c_p.l(exit.o)
    0x080001e0   0x080001e0   0x00000008   Code   RO         1009    .text               c_p.l(libspace.o)
    0x080001e8   0x080001e8   0x0000000c   Code   RO         1066    .text               c_p.l(sys_exit.o)
    0x080001f4   0x080001f4   0x00000002   Code   RO         1089    .text               c_p.l(use_no_semi.o)
    0x080001f6   0x080001f6   0x00000000   Code   RO         1091    .text               c_p.l(indicate_semi.o)
    0x080001f6   0x080001f6   0x00000092   Code   RO          324    .text.GPIO_Init     hk32f030m_gpio.o
    0x08000288   0x08000288   0x00000004   Code   RO          340    .text.GPIO_ResetBits  hk32f030m_gpio.o
    0x0800028c   0x0800028c   0x00000004   Code   RO          338    .text.GPIO_SetBits  hk32f030m_gpio.o
    0x08000290   0x08000290   0x00000008   Code   RO          346    .text.GPIO_Toggle   hk32f030m_gpio.o
    0x08000298   0x08000298   0x00000002   Code   RO           55    .text.HardFault_Handler  hk32f030m_it.o
    0x0800029a   0x0800029a   0x00000002   Code   RO           53    .text.NMI_Handler   hk32f030m_it.o
    0x0800029c   0x0800029c   0x00000002   Code   RO           59    .text.PendSV_Handler  hk32f030m_it.o
    0x0800029e   0x0800029e   0x00000002   PAD
    0x080002a0   0x080002a0   0x0000001c   Code   RO          523    .text.RCC_AHBPeriphClockCmd  hk32f030m_rcc.o
    0x080002bc   0x080002bc   0x00000002   Code   RO           57    .text.SVC_Handler   hk32f030m_it.o
    0x080002be   0x080002be   0x00000002   PAD
    0x080002c0   0x080002c0   0x00000018   Code   RO          481    .text.SysTick_CLKSourceConfig  hk32f030m_misc.o
    0x080002d8   0x080002d8   0x00000034   Code   RO           42    .text.SysTick_DelayMs  systick_delay.o
    0x0800030c   0x0800030c   0x00000002   Code   RO           61    .text.SysTick_Handler  hk32f030m_it.o
    0x0800030e   0x0800030e   0x00000002   PAD
    0x08000310   0x08000310   0x00000034   Code   RO           38    .text.SysTick_Init  systick_delay.o
    0x08000344   0x08000344   0x000000d8   Code   RO           13    .text.SystemInit    system_hk32f030m.o
    0x0800041c   0x0800041c   0x0000001c   Code   RO           11    .text.clockFailure  system_hk32f030m.o
    0x08000438   0x08000438   0x000001fc   Code   RO           28    .text.main          main.o
    0x08000634   0x08000634   0x000001f6   Code   RO          961    .text_divfast       c_p.l(aeabi_sdivfast.o)
    0x0800082a   0x0800082a   0x00000002   PAD
    0x0800082c   0x0800082c   0x00000020   Data   RO         1144    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08000850, Size: 0x00000670, Max: 0x00000800, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08000850   0x00000004   Data   RW           17    .data.SystemCoreClock  system_hk32f030m.o
    0x20000004   0x08000854   0x00000004   PAD
    0x20000008        -       0x00000060   Zero   RW         1010    .bss                c_p.l(libspace.o)
    0x20000068        -       0x00000008   Zero   RW           44    .bss..L_MergedGlobals  systick_delay.o
    0x20000070        -       0x00000200   Zero   RW            2    HEAP                startup_hk32f030mf4p6.o
    0x20000270        -       0x00000400   Zero   RW            1    STACK               startup_hk32f030mf4p6.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       162          0          0          0          0       6640   hk32f030m_gpio.o
        10          0          0          0          0        673   hk32f030m_it.o
        24          0          0          0          0       2482   hk32f030m_misc.o
        28          4          0          0          0       9851   hk32f030m_rcc.o
       508          8          0          0          0       2139   main.o
        56         26        176          0       1536        684   startup_hk32f030mf4p6.o
       244         28          0          4          0       2965   system_hk32f030m.o
       104         20          0          0          8       1373   systick_delay.o

    ----------------------------------------------------------------------
      1142         86        208          4       1548      26807   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         6          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
       502          0          0          0          0         92   aeabi_sdivfast.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       774         16          0          0         96        640   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       768         16          0          0         96        640   c_p.l

    ----------------------------------------------------------------------
       774         16          0          0         96        640   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      1916        102        208          4       1644      27207   Grand Totals
      1916        102        208          4       1644      27207   ELF Image Totals
      1916        102        208          4          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 2124 (   2.07kB)
    Total RW  Size (RW Data + ZI Data)              1648 (   1.61kB)
    Total ROM Size (Code + RO Data + RW Data)       2128 (   2.08kB)

==============================================================================

